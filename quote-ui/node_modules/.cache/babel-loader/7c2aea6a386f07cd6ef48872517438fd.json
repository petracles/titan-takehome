{"ast":null,"code":"import _classCallCheck from \"/Users/petracles/Developer/titanvest-takehome/quote-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/petracles/Developer/titanvest-takehome/quote-ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/petracles/Developer/titanvest-takehome/quote-ui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/petracles/Developer/titanvest-takehome/quote-ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/petracles/Developer/titanvest-takehome/quote-ui/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/petracles/Developer/titanvest-takehome/quote-ui/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/petracles/Developer/titanvest-takehome/quote-ui/src/App.js\";\n// import React, { Component } from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n// class App extends Component {\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//           <p>\n//             Edit <code>src/App.js</code> and save to reload.\n//           </p>\n//           <a\n//             className=\"App-link\"\n//             href=\"https://reactjs.org\"\n//             target=\"_blank\"\n//             rel=\"noopener noreferrer\"\n//           >\n//             Learn React\n//           </a>\n//         </header>\n//       </div>\n//     );\n//   }\n// }\n// export default App;\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bulma/bulma\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      list: [\"Go to the store\", \"Wash the dishes\", \"Learn some code\"]\n    };\n    _this.addItem = _this.addItem.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeItem = _this.removeItem.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"addItem\",\n    value: function addItem(e) {\n      // Prevent button click from submitting form\n      e.preventDefault(); // Create variables for our list, the item to add, and our form\n\n      var list = this.state.list;\n      var newItem = document.getElementById(\"addInput\");\n      var form = document.getElementById(\"addItemForm\"); // If our input has a value\n\n      if (newItem.value != \"\") {\n        // Add the new item to the end of our list array\n        list.push(newItem.value); // Then we use that to set the state for list\n\n        this.setState({\n          list: list\n        }); // Finally, we need to reset the form\n\n        newItem.classList.remove(\"is-danger\");\n        form.reset();\n      } else {\n        // If the input doesn't have a value, make the border red since it's required\n        newItem.classList.add(\"is-danger\");\n      }\n    }\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(item) {\n      // Put our list into an array\n      var list = this.state.list.slice(); // Check to see if item passed in matches item in array\n\n      list.some(function (el, i) {\n        if (el === item) {\n          // If item matches, remove it from array\n          list.splice(i, 1);\n          return true;\n        }\n      }); // Set state to list\n\n      this.setState({\n        list: list\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(List, {\n        items: this.state.list,\n        delete: this.removeItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"section\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"form\",\n        id: \"addItemForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        id: \"addInput\",\n        placeholder: \"Something that needs ot be done...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"button is-info\",\n        onClick: this.addItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Add Item\")))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar List =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(List, _React$Component);\n\n  function List(props) {\n    var _this2;\n\n    _classCallCheck(this, List);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n    _this2.state = {\n      filtered: []\n    };\n    _this2.handleChange = _this2.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        filtered: this.props.items\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        filtered: nextProps.items\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      // Variable to hold the original version of the list\n      var currentList = []; // Variable to hold the filtered list before putting into state\n\n      var newList = []; // If the search bar isn't empty\n\n      if (e.target.value !== \"\") {\n        // Assign the original list to currentList\n        currentList = this.props.items; // Use .filter() to determine which items should be displayed\n        // based on the search terms\n\n        newList = currentList.filter(function (item) {\n          // change current item to lowercase\n          var lc = item.toLowerCase(); // change search term to lowercase\n\n          var filter = e.target.value.toLowerCase(); // check to see if the current list item includes the search term\n          // If it does, it will be added to newList. Using lowercase eliminates\n          // issues with capitalization in search terms and search content\n\n          return lc.includes(filter);\n        });\n      } else {\n        // If the search bar is empty, set newList to original task list\n        newList = this.props.items;\n      } // Set the filtered state based on what our rules added to newList\n\n\n      this.setState({\n        filtered: newList\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        onChange: this.handleChange,\n        placeholder: \"Search...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, this.state.filtered.map(function (item) {\n        return React.createElement(\"li\", {\n          key: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, item, \" \\xA0\", React.createElement(\"span\", {\n          className: \"delete\",\n          onClick: function onClick() {\n            return _this3.props.delete(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 189\n  },\n  __self: this\n}), document.getElementById(\"app\"));\nexport default App;","map":{"version":3,"sources":["/Users/petracles/Developer/titanvest-takehome/quote-ui/src/App.js"],"names":["React","Component","ReactDOM","App","props","state","list","addItem","bind","removeItem","e","preventDefault","newItem","document","getElementById","form","value","push","setState","classList","remove","reset","add","item","slice","some","el","i","splice","List","filtered","handleChange","items","nextProps","currentList","newList","target","filter","lc","toLowerCase","includes","map","delete","render"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\n// class App extends Component {\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//           <p>\n//             Edit <code>src/App.js</code> and save to reload.\n//           </p>\n//           <a\n//             className=\"App-link\"\n//             href=\"https://reactjs.org\"\n//             target=\"_blank\"\n//             rel=\"noopener noreferrer\"\n//           >\n//             Learn React\n//           </a>\n//         </header>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bulma/bulma\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [\"Go to the store\", \"Wash the dishes\", \"Learn some code\"]\n    };\n    this.addItem = this.addItem.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n  }\n\n  addItem(e) {\n    // Prevent button click from submitting form\n    e.preventDefault();\n\n    // Create variables for our list, the item to add, and our form\n    let list = this.state.list;\n    const newItem = document.getElementById(\"addInput\");\n    const form = document.getElementById(\"addItemForm\");\n\n    // If our input has a value\n    if (newItem.value != \"\") {\n      // Add the new item to the end of our list array\n      list.push(newItem.value);\n      // Then we use that to set the state for list\n      this.setState({\n        list: list\n      });\n      // Finally, we need to reset the form\n      newItem.classList.remove(\"is-danger\");\n      form.reset();\n    } else {\n      // If the input doesn't have a value, make the border red since it's required\n      newItem.classList.add(\"is-danger\");\n    }\n  }\n\n  removeItem(item) {\n    // Put our list into an array\n    const list = this.state.list.slice();\n    // Check to see if item passed in matches item in array\n    list.some((el, i) => {\n      if (el === item) {\n        // If item matches, remove it from array\n        list.splice(i, 1);\n        return true;\n      }\n    });\n    // Set state to list\n    this.setState({\n      list: list\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"container\">\n          <section className=\"section\">\n\t\t\t\t\t\t<List items={this.state.list} delete={this.removeItem} />\n          </section>\n          <hr />\n          <section className=\"section\">\n            <form className=\"form\" id=\"addItemForm\">\n              <input\n                type=\"text\"\n                className=\"input\"\n                id=\"addInput\"\n                placeholder=\"Something that needs ot be done...\"\n              />\n              <button className=\"button is-info\" onClick={this.addItem}>\n                Add Item\n              </button>\n            </form>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass List extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfiltered: []\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\t\n\tcomponentDidMount() {\n    this.setState({\n      filtered: this.props.items\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      filtered: nextProps.items\n    });\n  }\n\t\n\thandleChange(e) {\n\t\t// Variable to hold the original version of the list\n    let currentList = [];\n\t\t// Variable to hold the filtered list before putting into state\n    let newList = [];\n\t\t\n\t\t// If the search bar isn't empty\n    if (e.target.value !== \"\") {\n\t\t\t// Assign the original list to currentList\n      currentList = this.props.items;\n\t\t\t\n\t\t\t// Use .filter() to determine which items should be displayed\n\t\t\t// based on the search terms\n      newList = currentList.filter(item => {\n\t\t\t\t// change current item to lowercase\n        const lc = item.toLowerCase();\n\t\t\t\t// change search term to lowercase\n        const filter = e.target.value.toLowerCase();\n\t\t\t\t// check to see if the current list item includes the search term\n\t\t\t\t// If it does, it will be added to newList. Using lowercase eliminates\n\t\t\t\t// issues with capitalization in search terms and search content\n        return lc.includes(filter);\n      });\n    } else {\n\t\t\t// If the search bar is empty, set newList to original task list\n      newList = this.props.items;\n    }\n\t\t// Set the filtered state based on what our rules added to newList\n    this.setState({\n      filtered: newList\n    });\n  }\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<input type=\"text\" className=\"input\" onChange={this.handleChange} placeholder=\"Search...\" />\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{this.state.filtered.map(item => (\n\t\t\t\t\t\t\t<li key={item}>\n\t\t\t\t\t\t\t\t{item} &nbsp;\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName=\"delete\"\n\t\t\t\t\t\t\t\t\tonClick={() => this.props.delete(item)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t)\n\t}\n}\n\nReactDOM.render(<App />, document.getElementById(\"app\"));\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}